workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: always

stages:
  - test
  - build

Code Quality:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: always
  script:
    - rm -rf civenv-master
    - virtualenv -p python3 --system-site-packages civenv
    - . ./civenv/bin/activate
    - pip3 install -I mypy
    - pip3 install -I git+https://dev.gajim.org/gajim/python-nbxmpp.git@master
    - pip3 install -I pylint==2.4.4
    - pip3 install -I codespell
    - pip3 install -I coverage
    - pip3 install -I css-parser
    - pip3 install -I keyring
    - pip3 install -I packaging
    - pip3 install -I precis-i18n
    - pip3 install -I pyOpenSSL
    - mypy -V
    - mypy gajim
    - scripts/dev/pylint-ci.sh --jobs=2 gajim
    - coverage run --source=gajim -m unittest discover -s test/no_gui -v
    - coverage report -mi
    - coverage xml -i
    - codespell -I codespell.conf --skip="*__pycache__*,gajim/data/icons,gajim/data/sounds,gajim/data/emoticons" gajim
    - deactivate
    - rm -rf civenv-master
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    reports:
      cobertura: coverage.xml

appdata.xml:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: always
  script:
    - python3 setup.py build
    - appstream-util validate build/data/org.gajim.Gajim.appdata.xml

Linux:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: always
  before_script:
    - sudo apt-get build-dep -y -qq gajim-default-nightly
  script:
    - python3 setup.py sdist
    - cd dist
    - GF=$(basename gajim-* .tar.gz)
    - gzip -d $GF.tar.gz
    - mkdir -p $GF/gajim/data/plugins/
    - curl -O https://ftp.gajim.org/plugins_master_zip/plugin_installer.zip
    - unzip plugin_installer.zip -d $GF/gajim/data/plugins/
    - rm plugin_installer.zip
    - tar -uf $GF.tar $GF
    - gzip $GF.tar

  artifacts:
    name: "gajim-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA"
    expire_in: 1 week
    paths:
      - dist/gajim-*.tar.gz

Windows:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - ./scripts/ci/appveyor.py
